<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClosePeriod.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABcAAAAWCAIAAACkFJBSAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA5hJREFUOE+dlP1v
        GnUcx+vv/gH7zR908wfXxMyYmCxqfIh2M6YuS3Qm6xyUWtcqC83WpfbBEp2uD0taU9LGEmV0YYNIWHoc
        DFqgVyh9onA89IBSjjuO4+A4kJaHcZRab+lS1wbTyPenyzffe33fn8/3/f7U7dW0tsOI64eW9IJh/++6
        GiAUGQc//wBrOLHyxdkaKaVSSfPg4cgrL428+MLkG6erU/5+bu2f2N84+A6F0Tmr9d6Nm9dfPjku6qhF
        CwfTA3+ursFGC6RUqQgqUQslzdC4ddhtkiqmfodh+KCn/6+7iYBh5NYnYsEZi/y7nUrleApJkh6PRyaT
        DQwM2O32yu5eNp1YN965O3j7x2tvB1aB5x/3Xy2ZTGbV4QAAQCwWj42Ntba2NjY2ikSizs7Onu+7hoZH
        VBKhdrylv6NJI2kus6WjlJmZGalUKpFI3nnv/bb2dh6PJxQKhwfumIyGrq4uIk79Klc2nP9oE/g2o7us
        7j/jtINHXFbn9XoFAsGVq/yb3zSDoz/19fXNW63GWdPguNQXoyVq3XwkOQnM/fbLVdbCS6kbwAk+Wzok
        5Kl35XI5VwLX8LbronXI8HCoX2ZanA9TBh8KoUkPvQ1Ftzq6b0XUV4ra8+ahN3lNn6Gx5FEtIAj29vS4
        vb77MzatP+ZZnEcggw1nlgnGiibcTHFUCcp+/rIwfS6pOHvj0qt3pzSQHw+i2KG+cL50uVwbwSCKEysR
        yoim3Daz2/J4iUgvEhlLmO7uFoWnPs7I66d7TzU1N8FpFtkqg2tIKIJXeWmSINYDwaUIBUX/ghfmuOqc
        TGlUbZgQX8yDjfjka20XT/0BQv7tii9d8GVZvSsQijxTdMh18dhT0CKWtJFZtx0iXEu3Jyanx3mVwCgw
        +C6//Ws4U/ami85UAc+VI7kdq28jQsa5ao56lwP5AkEHkVqgcjji6W3n3xu8sKLkCXkfAjYHXtxFt55E
        82V/toTmKmhxD8ZItvSkSgJIIuoPbjjIjCe3y2+59lb9CcFX5wBoOZzfDW+XN3I7oS02VWCxBE3gmNcN
        YxhWPUcxDhTaJHLsp5cuv366XqvRkDt7yQIbTTJ0ggoF/HNmkxaY1ul0CILQNP2faYwTBLKJLqyu+YPB
        rG8ZWbZBEGR4rFepVAqFgkuWXq/P5/PHTwYqTgb8fovFcv+BUvPo0ezsrNlsZhgmkXg2Vo7P9P4JLh9O
        p5ML6sG1Vef0P2l6CPQ3FO4EAAAAAElFTkSuQmCC
</value>
  </data>
</root>